/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quartzo_analytics;

import java.awt.Color;
import java.awt.SystemColor;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.ApplicationFrame;

/**
 *
 * @author 201810622
 */
public class Tela extends javax.swing.JFrame {

    /**
     * Creates new form Tela
     */
    public Tela() {
        initComponents();
        jScrollPane3.setVisible(false);
        jScrollPane4.setVisible(false);
        tipo.setVisible(false);
        r_tipo.setVisible(false);
        resultado.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    int contid = 0;

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane3 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tab2 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        r_mediana = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        r_media = new javax.swing.JTextField();
        r_moda = new javax.swing.JTextField();
        r_variacao = new javax.swing.JTextField();
        r_assimetria = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        r_cv = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        r_desvio = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nometabela = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        quantidade = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab1 = new javax.swing.JTable();
        salvarTab = new javax.swing.JButton();
        inDados = new javax.swing.JButton();
        clearDados = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        procurar_end = new javax.swing.JTextField();
        Procurar = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        carregar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        tipodatabela = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tab3 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tab5 = new javax.swing.JTable();
        tipo = new javax.swing.JLabel();
        r_tipo = new javax.swing.JTextField();
        resultado = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quartzo_Analytics");

        jTabbedPane1.setToolTipText("Quartzo_Analytics");

        jPanel2.setLayout(null);

        tab2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dados", "Frequência"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tab2);
        if (tab2.getColumnModel().getColumnCount() > 0) {
            tab2.getColumnModel().getColumn(0).setResizable(false);
            tab2.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(10, 110, 810, 179);

        jLabel9.setFont(new java.awt.Font("Leelawadee", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 51));
        jLabel9.setText("Mediana:");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(20, 320, 60, 15);

        r_mediana.setEditable(false);
        jPanel2.add(r_mediana);
        r_mediana.setBounds(80, 320, 155, 20);

        jLabel10.setFont(new java.awt.Font("Leelawadee", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 51));
        jLabel10.setText("coeficiente-de-assimetria :");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(540, 340, 148, 15);

        jLabel8.setFont(new java.awt.Font("Leelawadee", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 51));
        jLabel8.setText("Moda:");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(30, 380, 40, 15);

        jLabel13.setFont(new java.awt.Font("Leelawadee", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 51));
        jLabel13.setText("Analise de variação : ");
        jPanel2.add(jLabel13);
        jLabel13.setBounds(280, 310, 115, 15);

        jLabel7.setFont(new java.awt.Font("Leelawadee", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 51));
        jLabel7.setText("Média:");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(30, 350, 50, 15);

        r_media.setEditable(false);
        jPanel2.add(r_media);
        r_media.setBounds(80, 350, 155, 20);

        r_moda.setEditable(false);
        jPanel2.add(r_moda);
        r_moda.setBounds(80, 380, 155, 20);

        r_variacao.setEditable(false);
        r_variacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_variacaoActionPerformed(evt);
            }
        });
        jPanel2.add(r_variacao);
        r_variacao.setBounds(420, 310, 90, 20);

        r_assimetria.setEditable(false);
        r_assimetria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_assimetriaActionPerformed(evt);
            }
        });
        jPanel2.add(r_assimetria);
        r_assimetria.setBounds(690, 340, 130, 20);

        jLabel11.setFont(new java.awt.Font("Leelawadee", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 51));
        jLabel11.setText("Coeficiente de variação:");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(280, 370, 127, 15);

        r_cv.setEditable(false);
        jPanel2.add(r_cv);
        r_cv.setBounds(420, 370, 90, 20);

        jLabel12.setFont(new java.awt.Font("Leelawadee", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 51));
        jLabel12.setText("Desvio Padrão : ");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(280, 340, 127, 15);

        r_desvio.setEditable(false);
        jPanel2.add(r_desvio);
        r_desvio.setBounds(420, 340, 90, 20);

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quartzo_analytics/backg.png"))); // NOI18N
        jPanel2.add(jLabel20);
        jLabel20.setBounds(0, 0, 830, 460);

        jTabbedPane1.addTab("Cálculo", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 829, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 458, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Gráficos", jPanel3);

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Lao UI", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 51));
        jLabel1.setText("Nome da tabela :");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(21, 378, 90, 15);
        jPanel1.add(nometabela);
        nometabela.setBounds(120, 380, 161, 20);

        jLabel2.setFont(new java.awt.Font("Lao UI", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 51));
        jLabel2.setText("Nome :");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(230, 110, 50, 15);
        jPanel1.add(nome);
        nome.setBounds(290, 140, 95, 20);

        jLabel3.setFont(new java.awt.Font("Lao UI", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 51));
        jLabel3.setText("Dado :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(300, 70, 60, 15);
        jPanel1.add(quantidade);
        quantidade.setBounds(350, 70, 94, 20);

        tab1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dados", "Quantidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab1.setAutoscrolls(false);
        jScrollPane1.setViewportView(tab1);
        if (tab1.getColumnModel().getColumnCount() > 0) {
            tab1.getColumnModel().getColumn(0).setResizable(false);
            tab1.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 180, 808, 160);

        salvarTab.setFont(new java.awt.Font("Lao UI", 1, 14)); // NOI18N
        salvarTab.setText("Salvar tabela");
        salvarTab.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        salvarTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarTabActionPerformed(evt);
            }
        });
        jPanel1.add(salvarTab);
        salvarTab.setBounds(470, 350, 130, 27);

        inDados.setText("Inserir dados");
        inDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inDadosActionPerformed(evt);
            }
        });
        jPanel1.add(inDados);
        inDados.setBounds(470, 70, 95, 23);

        clearDados.setText("Limpar Campo");
        clearDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearDadosActionPerformed(evt);
            }
        });
        jPanel1.add(clearDados);
        clearDados.setBounds(590, 70, 99, 23);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ";", "|", "," }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(420, 350, 29, 20);

        jLabel4.setFont(new java.awt.Font("Lao UI", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 51));
        jLabel4.setText("Delimitador : ");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(340, 350, 72, 15);

        jLabel14.setFont(new java.awt.Font("Lao UI", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 51));
        jLabel14.setText("Caminho do arquivo : ");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(400, 10, 119, 15);
        jPanel1.add(procurar_end);
        procurar_end.setBounds(530, 10, 190, 20);

        Procurar.setText("Procurar");
        Procurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcurarActionPerformed(evt);
            }
        });
        jPanel1.add(Procurar);
        Procurar.setBounds(730, 10, 73, 23);

        jLabel15.setFont(new java.awt.Font("Lao UI", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 51));
        jLabel15.setText("Delimitador : ");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(450, 40, 72, 15);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ";", "|", "," }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox4);
        jComboBox4.setBounds(530, 40, 29, 20);

        carregar.setText("Carregar");
        carregar.setEnabled(false);
        carregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregarActionPerformed(evt);
            }
        });
        jPanel1.add(carregar);
        carregar.setBounds(730, 40, 75, 23);

        jSeparator1.setBackground(new java.awt.Color(29, 29, 109));
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(10, 100, 808, 2);

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Lao UI", 1, 13)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 51));
        jLabel16.setText("Salvar arquivo");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(21, 355, 110, 18);

        jLabel17.setFont(new java.awt.Font("Lao UI", 1, 13)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 51));
        jLabel17.setText("Inserir dados");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(10, 110, 140, 18);

        jLabel18.setFont(new java.awt.Font("Lao UI", 1, 13)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 51));
        jLabel18.setText("Procurar dados");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(280, 10, 100, 18);

        tipodatabela.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tabela de Nomes", "Tabela de Frequências", "Tabela Importada" }));
        tipodatabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipodatabelaActionPerformed(evt);
            }
        });
        jPanel1.add(tipodatabela);
        tipodatabela.setBounds(290, 110, 133, 20);

        jLabel5.setBackground(new java.awt.Color(0, 0, 51));
        jLabel5.setFont(new java.awt.Font("Lao UI", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 51));
        jLabel5.setText("Tipo : ");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(240, 140, 40, 15);

        tab3.setFont(new java.awt.Font("Lao UI", 0, 14)); // NOI18N
        tab3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dados", "Frequência"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab3.setAlignmentX(1.0F);
        tab3.setAutoscrolls(false);
        tab3.setSelectionBackground(new java.awt.Color(255, 204, 0));
        tab3.setSelectionForeground(new java.awt.Color(204, 255, 255));
        tab3.setShowHorizontalLines(false);
        tab3.setShowVerticalLines(false);
        jScrollPane3.setViewportView(tab3);
        if (tab3.getColumnModel().getColumnCount() > 0) {
            tab3.getColumnModel().getColumn(0).setResizable(false);
            tab3.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(680, 375, 140, 22);

        tab5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(tab5);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(680, 410, 140, 45);

        tipo.setFont(new java.awt.Font("Lao UI", 1, 11)); // NOI18N
        tipo.setForeground(new java.awt.Color(0, 0, 51));
        tipo.setText("Tipo:");
        jPanel1.add(tipo);
        tipo.setBounds(500, 110, 30, 15);
        jPanel1.add(r_tipo);
        r_tipo.setBounds(540, 110, 80, 20);

        resultado.setText("Resultados");
        resultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultadoActionPerformed(evt);
            }
        });
        jPanel1.add(resultado);
        resultado.setBounds(650, 110, 85, 23);

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quartzo_analytics/backg.png"))); // NOI18N
        jPanel1.add(jLabel19);
        jLabel19.setBounds(0, -10, 840, 480);

        jTabbedPane1.addTab("Leitura dos dados", jPanel1);
        jTabbedPane1.addTab("CRÉDITOS", jTabbedPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultadoActionPerformed

        try {
            if (r_tipo.equals(null)) {
                throw new Exception("Nenhuma coluna escolhida");
            } else {

                FileReader fileReader = new FileReader(file);
                BufferedReader reader = new BufferedReader(fileReader);
                String line = reader.readLine();

                int select_col;
                if (line != null) {
                    select_col = get_col(); //chama get_coluna -> seleciona a coluna
                    //digitada armazena em select_col
                    get_dados(select_col);
                    r_media.setText(Double.toString(Tend_import.media()));
                    // r_moda.setText(Double.toString(Tend_import.moda()));
                    r_mediana.setText(Double.toString(Tend_import.mediana()));
                    //jTextField9.setText(Assimetria.assimetria());
                    // jTextField12.setText(Double.toString(Dispersao.dispersao()));

                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_resultadoActionPerformed

    private void tipodatabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipodatabelaActionPerformed
        // TODO add your handling code here:
        String tipoTabela = (String) tipodatabela.getSelectedItem();
        if (tipoTabela.equalsIgnoreCase("Tabela de Frequências")) {
            jScrollPane1.setViewportView(tab3);
        }
        if (tipoTabela.equalsIgnoreCase("Tabela de Nomes")) {
            jScrollPane1.setViewportView(tab1);
        }
        if (tipoTabela.equalsIgnoreCase("Tabela Importada")) {
            jScrollPane1.setViewportView(tab5);
        }
    }//GEN-LAST:event_tipodatabelaActionPerformed

    private void carregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregarActionPerformed
        String delimitador02 = String.valueOf(jComboBox4.getSelectedItem());
        try {
            if (file == null) {
                throw new Exception("Nenhum arquivo escolhido");
            } else {
                StringTokenizer tokenizer;
                FileReader fileReader = new FileReader(file);
                BufferedReader reader = new BufferedReader(fileReader);
                String line = reader.readLine();
                int colunas = 0;
                if (line != null) {
                    tokenizer = new StringTokenizer(line, delimitador02);
                    colunas = tokenizer.countTokens();
                    String[] cabecalho = new String[colunas];
                    for (int i = 0; i < colunas; i++) {
                        cabecalho[i] = tokenizer.nextToken();
                    }
                    tableModel = new DefaultTableModel(cabecalho, 0);
                    tab5.setModel(tableModel);
                    r_media = null;
                    r_mediana = null;
                    r_moda = null;
                    r_assimetria = null;
                    r_desvio = null;
                    r_variacao = null;
                    r_assimetria = null;
                    jPanel1.remove(chartPanel);

                }
                line = reader.readLine();
                while (line != null) {
                    tokenizer = new StringTokenizer(line, delimitador02);
                    String[] linha = new String[colunas];
                    for (int i = 0; tokenizer.hasMoreTokens(); i++) {
                        linha[i] = tokenizer.nextToken();
                    }
                    tableModel.addRow(linha);
                    line = reader.readLine();

                }
                reader.close();
                fileReader.close();
                tipo.setVisible(true);
                r_tipo.setVisible(true);
                resultado.setVisible(true);

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_carregarActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void ProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcurarActionPerformed
        JFileChooser chooser = new JFileChooser();
        try {
            int returnVal = chooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                file = chooser.getSelectedFile();
                procurar_end.setText(file.getCanonicalPath());
                carregar.setEnabled(true);
            } else {
                throw new Exception("Operação cancelada!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ProcurarActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void clearDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearDadosActionPerformed
        nome.setText("");
        quantidade.setText("");
    }//GEN-LAST:event_clearDadosActionPerformed

    private void inDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inDadosActionPerformed

        String dado1 = nome.getText();
        String qtd = quantidade.getText();

        if (chartPanel != null) {
            jPanel1.remove(chartPanel);
        }

        if (dado1.isEmpty()) {
            dado1 = "-";
        }
        try {
            if (quantidade.getText().equals("")) {
                throw new Exception("Preencha todos os campos");
            }

            Integer.parseInt(quantidade.getText());

            DefaultTableModel deleteAux2 = (DefaultTableModel) tab2.getModel();
            deleteAux2.setRowCount(0);

            DefaultTableModel deleteAux3 = (DefaultTableModel) tab3.getModel();
            deleteAux3.setRowCount(0);

            valores[position] = Double.parseDouble(quantidade.getText());
            String linha[] = {dado1, qtd};
            ((DefaultTableModel) tab1.getModel()).addRow(linha);
            ((DefaultTableModel) tab5.getModel()).addRow(linha);

            freq = Tend_central.freq(valores, position);

            for (int i = 0; i < freq.length; i++) {
                String linhaFreq[] = {Double.toString(freq[i][0]), Double.toString(freq[i][1])};
                ((DefaultTableModel) tab3.getModel()).addRow(linhaFreq);
                ((DefaultTableModel) tab2.getModel()).addRow(linhaFreq);
            }
            freqArred = Tend_central.freqArredondar(valores, position);
            position++;
            String mediana1[] = {Double.toString(arredondar(Tend_central.Mediana(valores, position), 2))};
            r_mediana.setText(mediana1[0]);

            String media1[] = {Double.toString(arredondar(Tend_central.Media(valores, position), 2))};
            r_media.setText(media1[0]);

            String DesvioPadrao[] = {Double.toString(arredondar(Tend_central.DesvioPadrao(valores, position), 2))};
            r_desvio.setText(DesvioPadrao[0]);

            String Coeficiente_de_variacao[] = {Double.toString(arredondar(Tend_central.Coeficiente_de_variacao(valores, position), 2))};
            r_cv.setText(Coeficiente_de_variacao[0]);

            String analiseVar = Tend_central.analiseVar(Tend_central.Coeficiente_de_variacao(valores, position));
            r_variacao.setText(Coeficiente_de_variacao[0]);

            double eixoX[] = new double[freqArred.length];
            double eixoY[] = new double[freqArred.length];
            for (int i = 0; i < freqArred.length; i++) {
                eixoX[i] = freqArred[i][0];
                eixoY[i] = freqArred[i][1];
            }

            jPanel3.setLayout(new java.awt.BorderLayout());
            criarGrafico(eixoX, eixoY);

            jPanel3.validate();
            jPanel3.repaint();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Digite somente numeros validos",
                    "Mensagem de erro !",
                    WIDTH);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    e.getMessage(),
                    "Mensagem de erro !",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_inDadosActionPerformed

//    public static final String DELIMITADOR = ";";
    // int DELIMITADOR = (int) jComboBox1.getSelectedItem();

    private void salvarTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarTabActionPerformed

        String DELIMITADOR = String.valueOf(jComboBox1.getSelectedItem());
        try {
            if (tab3.getRowCount() <= 1 && tab3.getColumnCount() <= 1) {
                throw new Exception("Tabela vazia");
            }
            if (nometabela.getText().equals("")) {
                throw new Exception("Coloque um nome para a tabela");
            }
            FileWriter fw = new FileWriter(System.getProperty("user.dir") + "-" + nometabela.getText() + ".csv");
            StringBuilder builder = new StringBuilder();

            builder.append("Dados");
            builder.append(DELIMITADOR);
            builder.append("Frequência");
            builder.append("\n");
            for (int i = 0; i < tab3.getRowCount(); i++) {
                builder.append(tab3.getValueAt(i, 0));
                builder.append(DELIMITADOR);
                builder.append(tab3.getValueAt(i, 1));
                builder.append("\n");
            }
            fw.write(builder.toString());
            fw.flush();
            fw.close();
            JOptionPane.showMessageDialog(this,
                    "Arquivo salvo como tabela de frequência com Sucesso ! " + "\n" + "Local : " + System.getProperty("user.dir") + "-" + nometabela.getText() + ".csv",
                    "Arquivo salvo!",
                    WIDTH);
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    e.getMessage(),
                    "Mensagem de erro !",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_salvarTabActionPerformed

    private void r_assimetriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_assimetriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_assimetriaActionPerformed

    private void r_variacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_variacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_variacaoActionPerformed

    DefaultTableModel tableModel;

    public void get_dados(int select_col) {
        DadosList = new ArrayList<>();
        double[] dados = new double[tableModel.getRowCount()];

        for (int i = 0; i < tableModel.getRowCount(); i++) {
            dados[i] = new Double(tableModel.getValueAt(i, select_col).toString().replace(',', '.'));
            DadosList.add(dados[i]);

        }

    }
    //seleciona coluna

    int get_col() {
        try {
            int col;
            int colunas;
            String delimitador02 = String.valueOf(jComboBox4.getSelectedItem());
            FileReader fileReader = new FileReader(file);
            BufferedReader reader = new BufferedReader(fileReader);
            String line = reader.readLine();
            // String texto = jTextField11.getText();
            StringTokenizer tokenizer;
            tokenizer = new StringTokenizer(line, delimitador02);
            colunas = tokenizer.countTokens();
            String[] cabecalho = new String[colunas];

            for (int i = 0; i < colunas; i++) {
                cabecalho[i] = tokenizer.nextToken();
                if ((cabecalho[i]).equals("Frequência")) { //seleciona o numero da coluna digitada
                    col = i;
                    return col;
                }
                if (cabecalho[i].equals("Quântidade") || cabecalho[i].equals("quântidade") || cabecalho[i].equals("qtd")) {
                    qtd = true;
                    qtdcol = i;
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        return 0;

    }
    double[] valores = new double[1000];
    int position = 0;
    double[][] freq;
    double[][] freqArred;
    boolean qtd = false; //se a tabela tem a coluna quantidade
    int qtdcol;          //qual o indice da coluda quantidade 
    int qtddados;        //quantos dados tem
    File file;
    public static List<Double> DadosList;

    public double arredondar(double a, int b) {
        double x = ((int) (a * Math.pow(10, b))) / Math.pow(10, b);
        return x;
    }
    ChartPanel chartPanel;

    public void criarGrafico(double eixoX[], double eixoY[]) {

        createXYDataset(eixoX, eixoY);
        try {
            DefaultCategoryDataset barra;
            barra = new DefaultCategoryDataset();
            for (int i = 0; i < tab2.getRowCount(); i++) {

                String name = tab2.getValueAt(i, 0).toString();
                Double cost = Double.valueOf(tab2.getValueAt(i, 1).toString());
                
                    barra.addValue(cost,name, name);
                
                
            }

            JFreeChart grafico = ChartFactory.createBarChart3D("Gráfico : Histograma", "Valores", "Frequências", barra, PlotOrientation.VERTICAL, true, true, false);
            ChartPanel gra = new ChartPanel(grafico);
            grafico.setBackgroundPaint(Color.white);

            CategoryPlot cplot = (CategoryPlot) grafico.getPlot();
            cplot.setBackgroundPaint(SystemColor.inactiveCaption);//change background color

            //set  bar chart color
            ((BarRenderer) cplot.getRenderer()).setBarPainter(new StandardBarPainter());

            BarRenderer r = (BarRenderer) grafico.getCategoryPlot().getRenderer();

            r.setSeriesPaint(0, Color.green);
            r.setSeriesPaint(1, Color.white);
            r.setItemMargin(0);
            r.setDrawBarOutline(false);

//            gra.setPreferredSize(jPanel3.getSize());
            jPanel3.removeAll();
            jPanel3.add(gra, java.awt.BorderLayout.CENTER);
            this.getContentPane().validate();
            this.getContentPane().repaint();
//        add(jPanel3);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(),
                    "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }
//    GRAFICO DE LINHA
//    private void criarGrafico(double eixoX[], double eixoY[]) {
//        try {
////Instância da classe apropriada do JFreeChart
//            JFreeChart chart = ChartFactory.createXYLineChart(
//                    "Gráfico : Polígono de Frequências",
//                    "Valores X(i)",
//                    "Frquências f(i)",
//                    createXYDataset(eixoX, eixoY),
//                    PlotOrientation.VERTICAL,
//                    true,
//                    true,
//                    false
//            );
////Algumas customizações (cores)
//            chart.setBackgroundPaint(Color.white);
//            XYPlot plot = chart.getXYPlot();
//            plot.setBackgroundPaint(Color.lightGray);
//            plot.setDomainGridlinePaint(Color.white);
//            plot.setRangeGridlinePaint(Color.white);
////Configuração dos eixos e escalas
////            NumberAxis axis = (NumberAxis) plot.getDomainAxis();
////            axis.setTickUnit(new NumberTickUnit(1));
////Criação do painel do gráfico e inserção no painel (jPainel1) da janela
//            chartPanel = new ChartPanel(chart);
//            chartPanel.setPreferredSize(jPanel3.getSize());
//            jPanel3.removeAll();
//            jPanel3.add(chartPanel, java.awt.BorderLayout.CENTER);
//            this.getContentPane().validate();
//            this.getContentPane().repaint();
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, ex.getMessage(),
//                    "ERRO", JOptionPane.ERROR_MESSAGE);
//        }
//    }

    private XYDataset createXYDataset(double eixoX[], double eixoY[]) {
        XYSeriesCollection dataset = new XYSeriesCollection();
        XYSeries serie = new XYSeries("");
//Inserir o conjunto de valores, um para cada linha da tabela. Ex.:
        int n = eixoX.length;
        for (int i = 0; i < n; i++) {
            serie.add(eixoX[i], eixoY[i]);
            System.out.println(eixoX[i] + " " + eixoY[i]);
        }
//Adicionar a série ao dataset e retornar
        dataset.addSeries(serie);
        return dataset;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Procurar;
    private javax.swing.JButton carregar;
    private javax.swing.JButton clearDados;
    private javax.swing.JButton inDados;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField nome;
    private javax.swing.JTextField nometabela;
    private javax.swing.JTextField procurar_end;
    private javax.swing.JTextField quantidade;
    private javax.swing.JTextField r_assimetria;
    private javax.swing.JTextField r_cv;
    private javax.swing.JTextField r_desvio;
    private javax.swing.JTextField r_media;
    private javax.swing.JTextField r_mediana;
    private javax.swing.JTextField r_moda;
    private javax.swing.JTextField r_tipo;
    private javax.swing.JTextField r_variacao;
    private javax.swing.JButton resultado;
    private javax.swing.JButton salvarTab;
    private javax.swing.JTable tab1;
    private javax.swing.JTable tab2;
    private javax.swing.JTable tab3;
    private javax.swing.JTable tab5;
    private javax.swing.JLabel tipo;
    private javax.swing.JComboBox<String> tipodatabela;
    // End of variables declaration//GEN-END:variables
}
